name: mydays deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FRONTEND_S3_BUCKET_NAME: wonny.kim
  BACKEND_S3_BUCKET_NAME: mydays-deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Backend 빌드 및 배포
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: actions/checkout@v3
      - run: touch ./backend/src/main/resources/application.properties
      - run: echo "${{ secrets.APPLICATION }}" > ./backend/src/main/resources/application.properties
      - run: cat ./backend/src/main/resources/application.properties

      - name: Grant execute permission for gradlew
        run: cd backend && chmod +x gradlew

      - name: Build with Gradle
        run: cd backend && ./gradlew clean build

      # Backend 파일 복사
      - name: Copy Backend files
        run: |
          mkdir -p deploy/backend
          cp backend/build/libs/*.jar deploy/backend/
          cp backend/appspec.yml deploy/
          cp backend/scripts/*.sh deploy/

      # Frontend 빌드 및 배포
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies and Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Set environment variables
        run: echo "VUE_APP_API_PATH=${{ secrets.VUE_DOTENV }}" > ./frontend/.env
      
      - name: Copy Frontend files
        run: |
          mkdir -p deploy/frontend
          cp -R frontend/dist/* deploy/frontend/

      # Zip 파일 생성
      - name: Make zip file
        run: cd deploy && zip -r ../mydays.zip ./*
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # Backend Zip 파일 S3에 업로드
      - name: Upload Backend to S3
        run: aws s3 cp --region ap-northeast-2 ./mydays.zip s3://${{ env.BACKEND_S3_BUCKET_NAME }}/

      # Frontend Zip 파일 S3에 업로드
      - name: Upload Frontend to S3
        run: aws s3 cp --region ap-northeast-2 ./mydays.zip s3://${{ env.FRONTEND_S3_BUCKET_NAME }}/

      # Backend Deploy
      - name: Deploy Backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
            --application-name mydays \
            --deployment-group-name mydays-group \
            --file-exists-behavior OVERWRITE \
            --s3-location bucket=${{ env.BACKEND_S3_BUCKET_NAME }},bundleType=zip,key=mydays.zip \
            --region ap-northeast-2

      # Frontend Deploy
      - name: Deploy Frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./deploy/frontend/ s3://${{ env.FRONTEND_S3_BUCKET_NAME }}/
